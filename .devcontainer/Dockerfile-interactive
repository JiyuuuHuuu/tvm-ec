# Adapted from https://github.com/hogepodge/tvm-docker/blob/main/Dockerfile
FROM nvidia/cuda:11.4.2-devel-ubuntu20.04

# Make apt non-interactive to keep installation from being blocked
ENV DEBIAN_FRONTEND=noninteractive
ENV LD_LIBRARY_PATH="/usr/lib/x86_64-linux-gnu/:${LD_LIBRARY_PATH}"

# Bring the image up to date
RUN apt-get dist-upgrade -y \
 && apt update -y \
 && apt upgrade -y \
 && apt install -y git screen

# setting up locales
RUN apt install -y locales \
 && echo "LC_ALL=en_US.UTF-8" >> /etc/environment \
 && echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
 && echo "LANG=en_US.UTF-8" > /etc/locale.conf \
 && locale-gen en_US.UTF-8

RUN apt install -y python3 \
 && apt install -y python3-dev \
 && apt install -y python3-setuptools \
 && apt install -y python3-pip

RUN apt install -y gcc \
 && apt install -y libtinfo-dev \
 && apt install -y zlib1g-dev \
 && apt install -y build-essential

RUN apt install -y cmake \
 && apt install -y git \
 && apt install -y libedit-dev \
 && apt install -y libxml2-dev \
 && apt install -y llvm

RUN apt install -y libgl1-mesa-glx \
 && apt install -y libglib2.0-0

RUN apt install -y vim \
 && apt install -y tmux

# install dependency for GF-Complete used by Jerasure
RUN apt install -y autoconf \
 && apt install -y libtool

ADD config.sh config.sh
ADD apt.txt apt.txt
ADD pip.txt pip.txt

RUN ./config.sh

ENV THREADS=8
